# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Commentary {
  content: String!
  createdAt: Float!
  id: String!
  postId: String!
  replyCount: Int!
  updatedAt: Float!
  user: User!
}

type CommentaryEdge {
  node: Commentary!
}

type CommentaryPagination {
  edges: [CommentaryEdge!]!
  itemsPerPage: Int!
  pageInfo: PaginationInfo!
  totalCount: Int!
  totalPages: Int!
}

input CommentarySortInput {
  filter: String
  type: CommentarySortType!
}

"""Review sort type enum"""
enum CommentarySortType {
  OLDER
  POPULAR
}

type Company {
  id: String!
  logoPath: String
  name: String!
  originCountry: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Follow {
  createdAt: Float!
  followed: User!
  follower: User!
  id: String!
  updatedAt: Float!
}

type FollowPagination {
  edges: [FollowPaginationEdge!]!
  itemsPerPage: Int!
  pageInfo: PaginationInfo!
  totalCount: Int!
  totalPages: Int!
}

type FollowPaginationEdge {
  node: Follow!
}

type Language {
  englishName: String!
  iso639: String!
  name: String!
}

"""Like type enum"""
enum LikeType {
  COMMENTARY
  POST
  REPLY
}

type List {
  backgroundImageUrl: String
  createdAt: Float!
  id: String!
  isPrivate: Boolean
  movieCount: Int!
  name: String!
  post: Post!
  postId: String!
  updatedAt: Float!
  user: User!
}

type ListPagination {
  edges: [ListPreviewPaginationEdge!]!
  itemsPerPage: Int!
  pageInfo: PaginationInfo!
  totalCount: Int!
  totalPages: Int!
}

type ListPreview {
  backgroundImageUrl: String
  createdAt: Float!
  id: String!
  isPrivate: Boolean
  movieCount: Int!
  movies: [Movie!]!
  name: String!
  post: Post!
  postId: String!
  updatedAt: Float!
  user: User!
}

type ListPreviewPaginationEdge {
  node: ListPreview!
}

type ListSimple {
  id: String!
  name: String!
}

input ListSortInput {
  filter: String
  type: ListSortType!
}

"""List sort type enum"""
enum ListSortType {
  NAME
  OLDER
  POPULARITY
  UPDATED
}

type Movie {
  backdropUrl: String!
  genres: [MovieGenre!]!
  id: Int!
  imdbId: String!
  originalLanguage: String!
  originalTitle: String!
  overview: String!
  posterUrl: String!
  productionCompanies: [Company!]!
  releaseDate: DateTime
  runtime: Int!
  spokenLanguages: [Language!]!
  voteAverage: Float!
}

type MovieCharacter {
  adult: Boolean!
  castId: Int!
  character: String!
  creditId: String!
  gender: Float!
  id: Int!
  knownForDepartment: String!
  name: String!
  order: Int!
  originalName: String!
  popularity: Float!
  profilePath: String
  profilePictureUrl: String!
}

type MovieCredits {
  cast: [MovieCharacter!]!
  crew: [MovieCrewMember!]!
}

type MovieCrewMember {
  adult: Boolean!
  creditId: String!
  department: String!
  gender: Float!
  id: Int!
  job: Int!
  knownForDepartment: String!
  name: String!
  originalName: String!
  popularity: Float!
  profilePath: String
  profilePictureUrl: String!
}

type MovieGenre {
  id: Int!
  name: String!
}

type MoviePaginationEdge {
  node: Movie!
}

type MovieReferencePagination {
  edges: [MoviePaginationEdge!]!
  itemsPerPage: Int!
  pageInfo: PaginationInfo!
  totalCount: Int!
  totalPages: Int!
}

input MovieReferenceSortInput {
  filter: String
  type: MovieReferenceSortType!
}

"""MovieReferenceSortType type enum"""
enum MovieReferenceSortType {
  DECADE
  GENRE
  RELEASE_OLDER
  RELEASE_RECENT
  YEAR
}

type MovieWithCredits {
  backdropUrl: String!
  credits: MovieCredits!
  genres: [MovieGenre!]!
  id: Int!
  imdbId: String!
  originalLanguage: String!
  originalTitle: String!
  overview: String!
  posterUrl: String!
  productionCompanies: [Company!]!
  releaseDate: DateTime
  runtime: Int!
  spokenLanguages: [Language!]!
  voteAverage: Float!
}

type Mutation {
  addMovieToList(listId: String!, movieId: Int!): Movie!
  addMovieToPreMadeList(listType: PreMadeListType!, movieId: Int!): Movie!
  createCommentary(content: String!, postId: String!): Commentary!
  createList(content: String, listName: String!): ListSimple!
  createReply(commentaryId: String!, content: String!): Reply!
  createReview(content: String!, movieId: Int!): Review!
  createUser(githubId: String!): User!
  deleteCommentary(commentaryId: String!): Boolean!
  deleteList(listId: String!): Boolean!
  deleteReply(replyId: String!): Boolean!
  deleteReview(reviewId: String!): Boolean!
  follow(userId: String!): Boolean!
  likeOrDislike(contentId: String!, likeType: LikeType!): Boolean!
  removeMovieFromList(listId: String!, movieId: Int!): Boolean!
  removeMovieFromPreMadeList(listType: PreMadeListType!, movieId: Int!): Boolean!
  signUp(githubId: String!): Boolean!
  toggleReviewPin(reviewId: String!): Boolean!
  unfollow(userId: String!): Boolean!
}

type PaginationInfo {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type Post {
  commentaryCount: Int!
  content: String
  createdAt: Float!
  id: String!
  likeCount: Int!
  updatedAt: Float!
  user: User!
}

"""PreMadeList type enum"""
enum PreMadeListType {
  FAVORITE
  WATCHED
  WATCHLIST
  WATCH_LATER
}

type ProfileStats {
  followerCount: Int!
  followingCount: Int!
  listCount: Int!
  moviesWatchedCount: Int!
  moviesWatchedThisYearCount: Int!
}

type Query {
  commentaries(page: Int!, postId: String!, sort: CommentarySortInput): CommentaryPagination!
  discoverMovies(page: Int!, sort: TmDBMovieSortInput): TmDBMovieListPagination!
  followers(page: Int!, userId: String!): FollowPagination!
  followings(page: Int!, userId: String!): FollowPagination!
  isFollowing(userId: String!): Boolean!
  isMovieOnPreMadeList(listType: PreMadeListType!, movieId: Int!): Boolean!
  list(listId: String!): List!
  listMovies(listId: String!, page: Int!, sort: MovieReferenceSortInput): MovieReferencePagination!
  lists(page: Int!, sort: ListSortInput, userId: String): ListPagination!
  movie(movieId: Int!): Movie!
  movieGenres: [MovieGenre!]!
  movieRecommendations(movieId: Int!, page: Int!): TmDBMovieListPagination!
  movieWithCredits(movieId: Int!): MovieWithCredits!
  preMadeListMovies(listType: PreMadeListType!, page: Int!, sort: MovieReferenceSortInput, userId: String!): MovieReferencePagination!
  profileStats(userId: String!): ProfileStats!
  replies(commentaryId: String!, page: Int!, sort: ReplySortInput): ReplyPagination!
  review(reviewId: String!): Review!
  reviews(page: Int! = 1, sort: ReviewSortInput, userId: String): ReviewPagination!
  searchMovie(page: Int!, searchTerm: String!): TmDBMovieListPagination!
  streamingProviders: [StreamingProvider!]!
  trendingMovies(page: Int!): TmDBMovieListPagination!
  user(username: String!): User!
  userByGithubId(githubId: String!): User!
  userById(userId: String!): User!
  userListNames(userId: String!): [ListSimple!]!
}

type Reply {
  commentaryId: String!
  content: String!
  createdAt: Float!
  id: String!
  updatedAt: Float!
  user: User!
}

type ReplyEdge {
  node: Reply!
}

type ReplyPagination {
  edges: [ReplyEdge!]!
  itemsPerPage: Int!
  pageInfo: PaginationInfo!
  totalCount: Int!
  totalPages: Int!
}

input ReplySortInput {
  filter: String
  type: ReplySortType!
}

"""Reply sort type enum"""
enum ReplySortType {
  OLDER
  POPULAR
}

type Review {
  id: ID!
  isPinned: Boolean!
  movie: Movie!
  post: Post!
  user: User!
}

type ReviewEdge {
  node: Review!
}

type ReviewPagination {
  edges: [ReviewEdge!]!
  itemsPerPage: Int!
  pageInfo: PaginationInfo!
  totalCount: Int!
  totalPages: Int!
}

input ReviewSortInput {
  filter: String
  type: ReviewSortType!
}

"""Review sort type enum"""
enum ReviewSortType {
  OLDER
  PINNED
  POPULAR
  POPULAR_WEEK
  RECENT
  YEAR
}

type StreamingProvider {
  displayPriority: Int!
  id: Int!
  logoPath: String!
  name: String!
}

type TMDBMovieListEdge {
  node: Movie!
}

type TmDBMovieListPagination {
  edges: [TMDBMovieListEdge!]!
  itemsPerPage: Int!
  pageInfo: PaginationInfo!
  totalCount: Int!
  totalPages: Int!
}

input TmDBMovieSortInput {
  filter: String
  type: TmDBMovieSortType!
}

"""Tmdb sort type enum"""
enum TmDBMovieSortType {
  DECADE
  GENRE
  RELEASE_OLDER
  RELEASE_RECENT
  SERVICE
  YEAR
}

type User {
  biography: String
  createdAt: Float!
  id: String!
  profilePictureUrl: String
  realName: String
  updatedAt: Float!
  username: String!
}